/*
 * This file is generated by jOOQ.
 */
package io.effective.tables;


import io.effective.Indexes;
import io.effective.Keys;
import io.effective.Smartops;
import io.effective.tables.records.CmsAccessKeyRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CmsAccessKey extends TableImpl<CmsAccessKeyRecord> {

    private static final long serialVersionUID = -62566100;

    /**
     * The reference instance of <code>smartops.cms_access_key</code>
     */
    public static final CmsAccessKey CMS_ACCESS_KEY = new CmsAccessKey();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CmsAccessKeyRecord> getRecordType() {
        return CmsAccessKeyRecord.class;
    }

    /**
     * The column <code>smartops.cms_access_key.id</code>.
     */
    public final TableField<CmsAccessKeyRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>smartops.cms_access_key.name</code>.
     */
    public final TableField<CmsAccessKeyRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>smartops.cms_access_key.corp</code>.
     */
    public final TableField<CmsAccessKeyRecord, String> CORP = createField("corp", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>smartops.cms_access_key.srn</code>.
     */
    public final TableField<CmsAccessKeyRecord, String> SRN = createField("srn", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>smartops.cms_access_key.account_id</code>.
     */
    public final TableField<CmsAccessKeyRecord, Long> ACCOUNT_ID = createField("account_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>smartops.cms_access_key.access_key_id</code>.
     */
    public final TableField<CmsAccessKeyRecord, String> ACCESS_KEY_ID = createField("access_key_id", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>smartops.cms_access_key.secret_access_key</code>.
     */
    public final TableField<CmsAccessKeyRecord, String> SECRET_ACCESS_KEY = createField("secret_access_key", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>smartops.cms_access_key.sync_enabled</code>.
     */
    public final TableField<CmsAccessKeyRecord, Boolean> SYNC_ENABLED = createField("sync_enabled", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'1'", org.jooq.impl.SQLDataType.BIT)), this, "");

    /**
     * The column <code>smartops.cms_access_key.sync_state</code>.
     */
    public final TableField<CmsAccessKeyRecord, String> SYNC_STATE = createField("sync_state", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false).defaultValue(org.jooq.impl.DSL.inline("pending", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>smartops.cms_access_key.error</code>.
     */
    public final TableField<CmsAccessKeyRecord, String> ERROR = createField("error", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>smartops.cms_access_key.last_sync_at</code>.
     */
    public final TableField<CmsAccessKeyRecord, Timestamp> LAST_SYNC_AT = createField("last_sync_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>smartops.cms_access_key.available</code>.
     */
    public final TableField<CmsAccessKeyRecord, Boolean> AVAILABLE = createField("available", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>smartops.cms_access_key.created_at</code>.
     */
    public final TableField<CmsAccessKeyRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>smartops.cms_access_key.created_by</code>.
     */
    public final TableField<CmsAccessKeyRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>smartops.cms_access_key.updated_at</code>.
     */
    public final TableField<CmsAccessKeyRecord, Timestamp> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>smartops.cms_access_key.updated_by</code>.
     */
    public final TableField<CmsAccessKeyRecord, String> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>smartops.cms_access_key.deleted</code>.
     */
    public final TableField<CmsAccessKeyRecord, Boolean> DELETED = createField("deleted", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "");

    /**
     * Create a <code>smartops.cms_access_key</code> table reference
     */
    public CmsAccessKey() {
        this(DSL.name("cms_access_key"), null);
    }

    /**
     * Create an aliased <code>smartops.cms_access_key</code> table reference
     */
    public CmsAccessKey(String alias) {
        this(DSL.name(alias), CMS_ACCESS_KEY);
    }

    /**
     * Create an aliased <code>smartops.cms_access_key</code> table reference
     */
    public CmsAccessKey(Name alias) {
        this(alias, CMS_ACCESS_KEY);
    }

    private CmsAccessKey(Name alias, Table<CmsAccessKeyRecord> aliased) {
        this(alias, aliased, null);
    }

    private CmsAccessKey(Name alias, Table<CmsAccessKeyRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> CmsAccessKey(Table<O> child, ForeignKey<O, CmsAccessKeyRecord> key) {
        super(child, key, CMS_ACCESS_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Smartops.SMARTOPS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CMS_ACCESS_KEY_CMS_ACCESS_KEY_ACCESS_KEY_ID_UINDEX, Indexes.CMS_ACCESS_KEY_CMS_ACCESS_KEY_SRN_UINDEX, Indexes.CMS_ACCESS_KEY_PRIMARY, Indexes.CMS_ACCESS_KEY_SYS_CLOUD_ACCESS_ID_UINDEX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CmsAccessKeyRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CMS_ACCESS_KEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CmsAccessKeyRecord> getPrimaryKey() {
        return Keys.KEY_CMS_ACCESS_KEY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CmsAccessKeyRecord>> getKeys() {
        return Arrays.<UniqueKey<CmsAccessKeyRecord>>asList(Keys.KEY_CMS_ACCESS_KEY_PRIMARY, Keys.KEY_CMS_ACCESS_KEY_SYS_CLOUD_ACCESS_ID_UINDEX, Keys.KEY_CMS_ACCESS_KEY_CMS_ACCESS_KEY_SRN_UINDEX, Keys.KEY_CMS_ACCESS_KEY_CMS_ACCESS_KEY_ACCESS_KEY_ID_UINDEX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CmsAccessKey as(String alias) {
        return new CmsAccessKey(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CmsAccessKey as(Name alias) {
        return new CmsAccessKey(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CmsAccessKey rename(String name) {
        return new CmsAccessKey(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CmsAccessKey rename(Name name) {
        return new CmsAccessKey(name, null);
    }
}
